<project name="yui" default="all">

    <property name="build" location="target"/>
    <property name="yui" location="target/yui"/>
    <property name="src" location="yahoo/presentation/2.x"/>
    <property name="verify" location="verify"/>
    <property name="tmp" location="tmp"/>
    <loadfile property="version.internal" srcFile="./version.internal.txt">
        <filterchain>
            <striplinebreaks/>
        </filterchain>
    </loadfile>
    <property name="akamai" location="target/akamai/${version.internal}"/>
    <property name="makeover" location="target/makeover/${version.internal}"/>

    <target name="all" depends="compile, test, package, verify, akamai, makeover"/>

    <target name="compile">

        <!-- clean up build dir and recreate -->
        <delete dir="${build}"/>
        <delete dir="${tmp}"/>
        <mkdir dir="${build}"/>
        <mkdir dir="${tmp}"/>
        <mkdir dir="${akamai}"/>
        <mkdir dir="${makeover}"/>

        <!-- create yahoo-dom-event.js -->
        <concat destfile="${src}/build/yahoo-dom-event/yahoo-dom-event.js">
            <filelist dir="${src}/build" 
                      files="yahoo/yahoo-min.js,dom/dom-min.js,event/event-min.js"/>
        </concat>

        <!-- create utilities.js -->
        <concat destfile="${src}/build/utilities/utilities.js">
            <filelist dir="${src}/build" 
                      files="yahoo/yahoo-min.js,dom/dom-min.js,event/event-min.js,connection/connection-min.js,animation/animation-min.js,dragdrop/dragdrop-min.js,element/element-beta-min.js"/>
        </concat>

        <!-- copy global README ... @todo extract latest release notes from all components -->
        <copy file="${src}/README" tofile="${yui}/README" preservelastmodified="true" />

        <!-- copy everything in build except the js files -->
        <copy todir="${yui}/build"  preservelastmodified="true">
            <fileset dir="${src}/build">
                <exclude name="**/*.js"/>
            </fileset>
        </copy>
        
        <!-- copy build js files, updating version token and prepending the copyright info -->
        <copy todir="${yui}/build" preservelastmodified="true">
            <fileset dir="${src}/build">
                <include name="**/*.js"/>
            </fileset>
            <filterchain>
                <concatfilter prepend="copyright.txt"/>
                <replacetokens>
                    <token key="VERSION" value="${version.internal}"/>
                    <token key="BUILD" value="${label}"/>
                </replacetokens>
            </filterchain>
        </copy>

        <!-- Generate docs -->
        <exec dir="." executable="caboodle.sh" />
        <copy todir="${yui}/docs" preservelastmodified="true">
            <fileset dir="${tmp}/docs" />
        </copy>

        <!-- copy docs, but not the legacy subdirs -->
        <!--
        <copy todir="${yui}/docs" preservelastmodified="true">
            <fileset dir="${src}/docs">
             <patternset id="no.subdirs.but.assets">
                <include name="*.html"/>
                <include name="*.gif"/>
                <include name="*.json"/>
              </patternset>
            </fileset>
        </copy>
        -->

        <!-- copy doc assets -->
        <!--
        <copy todir="${yui}/docs/assets" preservelastmodified="true">
            <fileset dir="${src}/docs/assets"/>
        </copy>
        -->

        <!-- copy examples -->
        <copy todir="${yui}/examples" preservelastmodified="true">
            <fileset dir="${src}/examples"/>
        </copy>

    </target>

    <!-- @todo run tests -->
    <target name="test" depends="compile">

    </target>

    <!-- zip up everything in the build directory -->
    <target name="package" depends="compile">
        <zip destfile="${build}/yui.zip" basedir="${build}" />
    </target>

    <target name="verify" depends="compile">
        <!-- copy build verification files -->
        <copy todir="${build}/verify" preservelastmodified="true">
            <fileset dir="${verify}"/>
        </copy>
    </target>

    <target name="akamai" depends="compile">
        <!-- copy the build files adding the akamai extension -->
        <copy todir="${akamai}/build">
            <fileset dir="${yui}/build">
              <patternset id="just.min">
                <include name="**/*-min.js"/>
                <include name="**/utilities*"/>
                <include name="**/yahoo-dom-event*"/>
                <include name="**/assets/**"/>
              </patternset>
            </fileset>
        </copy>

        <!-- deal with makefiles? -->

        <!-- generate script to make all of the subdirs -->

        <copy file="push_all.py" tofile="${build}/akamai/push_all.py" preservelastmodified="true" />

        <zip destfile="${build}/akamai.zip" basedir="${build}/akamai" />

    </target>

    <target name="makeover" depends="compile">
        <copy todir="${makeover}/build">
            <fileset dir="${yui}/build"/>
        </copy>

        <zip destfile="${build}/makeover.zip" basedir="${build}/makeover" />
    </target>

</project>
