###############################################################################
# Component specific build properties.
#
# The variable "srcdir" is available here and is the absolute path to the root 
# of the source tree. (e.g. /home/yuideveloper/cvsroot/yahoo/presentation/2.x )
###############################################################################

# Component name, lower-case. Used for build filenames (e.g. component.js, component-min.js).
component=foobarwidget

# Module name, mostly always the same as component.
component.module=${component}

# Main JS class representing the module. Version code will be added to this class.
component.mainclass=YAHOO.widget.FooBarWidget

# Uncomment the following line if your component is in beta. The built files will be named accordingly [ component-beta.js, component-beta-min.js etc.]
# component.releasetype=beta

# Absolute paths to the component base directory, src directory and local build directory. 
component.basedir=${srcdir}/widget/${component}
component.builddir=${component.basedir}/build
component.srcdir=${component.basedir}/src

# Base dir for component.jsfiles. For most components this is component.srcdir or component.srcdir/js
component.jsfiles.base=${component.srcdir}/js

# Comma seperated ordered list of source files to be concatenated, relative to component.jsfiles.base.
# Wildcards are not supported here.
component.jsfiles=FooBarWidget.js, FooBarUtils.js, renderer/FooBarWidgetRenderer.js

# Comma seperated list of asset files, relative to component.srcdir 
# Wildcards are allowed here.
component.assetfiles=img/*, css/*

# Regex used to strip logger statements from component.jsfiles. 
# The regex below strips "logger" and "Yahoo.log" lines, accounting for multi-line statements.
#
# - component.logger.regex = the search criteria for the regexp
# - component.logger.regex.byline = false/true, determines if the regex is executed against the whole file, or a line at a time resepectively
# - component.logger.regex.flags = the set of standard Perl5 regex flags which apply [ imgs ]
# - component.logger.regex.replace = the replacement string to use. An empty property is used for empty string
#
# The lines can be removed if you donot need to stip logger statements
#
# NOTE: Backslashes need to be escaped for correct property parsing
# 
# IMPORTANT!!: 
#	- Log statements need to end in semi-colons, otherwise the default regex will strip out code until the next semi-colon is hit.
#	- Any code on the same line as the start or end of a Log statement will be stripped. Hence Log statments should be on their own lines. 
component.logger.regex=^.*?(?:logger|YAHOO.log).*?(?:;|\\).*;|(?:\\r?\\n.*?)*?\\).*;).*;?.*?\\r?\\n
component.logger.regex.byline=false
component.logger.regex.flags=mg
component.logger.regex.replace=

# EOL conversion to be performed on build files.Possible values are lf (convert to unix) and asis (don't convert)
buildfiles.eol=lf
